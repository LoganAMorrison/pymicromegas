SHELL := /bin/bash

PYBIND11_INC = $(shell python3 -m pybind11 --includes)
EXTENSION = $(shell python3-config --extension-suffix)


# ===========================================================================
# ---- From MicroMEGAs Makefile ---------------------------------------------
# ===========================================================================

.PHONY: all

# read compiler flags
ifneq ($(MAKECMDGOALS),clean)
  AllFlags = ../CalcHEP_src/FlagsForMake
  ifeq (,$(wildcard $(AllFlags) )) 
    $(error File $(AllFlags) is absent. Presumably you forgot to compile main code)
  endif 
  include ../CalcHEP_src/FlagsForMake 
endif 

cLib = $(CALCHEP)/lib
# files to compile
SSS = $(wildcard lib/*.a) ../lib/micromegas.a  $(cLib)/dynamic_me.a ../lib/micromegas.a \
  work/work_aux.a  $(wildcard lib/*.a)   $(cLib)/sqme_aux.$(SO) $(cLib)/libSLHAplus.a   \
  $(cLib)/num_c.a   $(cLib)/serv.a $(cLib)/ntools.a  $(CURDIR)/../lib/maxGap.so  ../lib/dummy.a   $(LX11)


ifneq ($(LHAPDFPATH),)
  SSS += -L$(LHAPDFPATH)  -lLHAPDF $(cLib)/dummy.a
  DLSET = export LD_RUN_PATH=$(LHAPDFPATH);
else 
  SSS += $(cLib)/dummy.a 
  DLSET= 
endif   

# ===========================================================================
# ---- Interface ------------------------------------------------------------
# ===========================================================================

PY_MICROMEGAS_SUSPECT_SOURCES = \
pymicromegas/pymicromegas_suspect.cpp \
pymicromegas/micromegas_suspect.cpp \
pymicromegas/micromegas.cpp \
pymicromegas/results.cpp \
pymicromegas/execute.cpp

PYMICROMEGAS_LINKS = -L/usr/local/lib -L/usr/lib $(SSS) $(lDL) -lm $(lQuad) -lpthread -lfmt
PYMICROMEGAS_INCLUDES = $(PYBIND11_INC) -Ipymicromegas -I/usr/local/include -I/usr/include
PYMICROMEGAS_FFLAGS = -fPIC -faligned-new -fvisibility=hidden 


all: suspect

suspect: libs work/bin build_suspect
	$(DLSET) $(CXX) -O3 -Wall -shared -std=c++11 $(PYMICROMEGAS_FFLAGS) $(PYMICROMEGAS_INCLUDES) $(PY_MICROMEGAS_SUSPECT_SOURCES) -o suspect$(EXTENSION) $(PYMICROMEGAS_LINKS)

# These build rules do the following:
#		1. In the case of spheno and softsusy, download and build the libraries
#		2. Build a main executable for testing
#		3. Run the main executable

build_suspect: libs work/bin
	# Make the main executable
	$(MAKE) main=main_suspect.cpp
	# Run it for good measure
	./main_suspect mssm0.par
